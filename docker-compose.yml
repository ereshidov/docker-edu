version: "3"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: docker-edu-frontend
    command: serve -s build -l 3000
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - docker-edu-network

  api:
    build: ./api
    container_name: docker-edu-api
    # Команда, которая выполнится при старте сервиса
    command: npm run start
    # Если контейнер упал или произошла какая-то ошибка
    # то docker-compose попробует перезапустить билд
    restart: unless-stopped
    # Указываем какие порты будут доступны снаружи
    ports:
      # слева - порт хоста
      # справа - порт внутри контейнера
      - "3001:3001"
    # Переменные окружения
    # Прокидывается в process.env
    environment:
      - PORT=3001
      - MONGO_URL=mongodb://api_db:27017/api
      - AUTH_API_URL=http://auth:3002/api
    depends_on:
      - api_db
    networks:
      - docker-edu-network
  api_db:
    container_name: docker-edu-api-db
    image: mongo:latest
    # Ссылка на объект вне контейнера
    volumes:
      - mongodb_api:/data/db
    networks:
      - docker-edu-network
  auth:
    build: ./auth
    container_name: docker-edu-auth
    command: npm run start
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGO_URL=mongodb://auth_db:27017/auth
    depends_on:
      - auth_db
    networks:
      - docker-edu-network
  auth_db:
    container_name: docker-edu-auth-db
    image: mongo:latest
    volumes:
      - mongodb_auth:/data/db
    networks:
      - docker-edu-network
  nginx:
    image: nginx:stable-alpine
    container_name: docker-edu-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
    networks:
      - docker-edu-network

# Такая запись позволяет шарить volumes между сервисами
volumes:
  mongodb_api:
  mongodb_auth:

# docker logs <service_name> - можно просматривать логи каждого отдельного сервиса

networks:
  docker-edu-network:
    driver: bridge
