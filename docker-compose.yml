version: "3"
services:
  frontend:
    build: ./frontend
    container_name: docker-edu-frontend
    command: npm run start
    ports:
      - "3000:3000"
    restart: unless-stopped
    # Так как у create-react-app интерактивная консоль
    # то нужно определить следующие поля, чтобы все работало
    stdin_open: true
    tty: true
    #
    volumes:
      - ./frontend/src:/usr/src/app/src

  api:
    build: ./api
    container_name: docker-edu-api
    # Команда, которая выполнится при старте сервиса
    command: npm run start
    # Если контейнер упал или произошла какая-то ошибка
    # то docker-compose попробует перезапустить билд
    restart: unless-stopped
    # Указываем какие порты будут доступны снаружи
    ports:
      # слева - порт хоста
      # справа - порт внутри контейнера
      - "3001:3001"
    # Переменные окружения
    # Прокидывается в process.env
    environment:
      - PORT=3001
      - MONGO_URL=mongodb://api_db:27017/api
    depends_on:
      - api_db
  api_db:
    container_name: docker-edu-api-db
    image: mongo:latest
    # Ссылка на объект вне контейнера
    volumes:
      - mongodb_api:/data/db
  auth:
    build: ./auth
    container_name: docker-edu-auth
    command: npm run start
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGO_URL=mongodb://auth_db:27017/auth
    depends_on:
      - auth_db
  auth_db:
    container_name: docker-edu-auth-db
    image: mongo:latest
    volumes:
      - mongodb_auth:/data/db

# Такая запись позволяет шарить volumes между сервисами
volumes:
  mongodb_api:
  mongodb_auth:

# docker logs <service_name> - можно просматривать логи каждого отдельного сервиса